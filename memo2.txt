  # 実行：stderrを一旦ファイルに取り出してから成否判定
  tmp_err="$(mktemp)"; trap 'rm -f "$tmp_err"' RETURN
  new_id="$(
    psql -X -q -At "$DB_URL" \
      -v id1="$id1" -v id2="$id2" -v other="$other" \
      -f sql/insert_item.sql \
      2>"$tmp_err" || true
  )"
  rc=$?
  if (( rc != 0 )); then
    log_err "$row" "$(tr -d '\r' < "$tmp_err")"
    continue
  fi


#!/usr/bin/env bash
set -euo pipefail

# JWTトークン（事前に生成済み）
JWT="$1"

# クエリパラメータ（例）
verifier="abc123"
ric="9999"
leavedate="2025-08-18"

# リクエスト先
BASE_URL="http://example.com"

# GETリクエスト
curl -sS -X GET \
  -H "Authorization: Bearer $JWT" \
  "$BASE_URL?verifier=$verifier&ric=$ric&leavedate=$leavedate"



cmd="curl -sS -X GET \
  -H \"Authorization: Bearer $JWT\" \
  \"$BASE_URL?verifier=$verifier&ric=$ric&leavedate=$leavedate\""

# そのまま表示
echo "$cmd"


# レスポンス本文を tmp に保存しつつ HTTPステータスを取得
tmp_body="$(mktemp)"
http_code="$(curl -sS -o "$tmp_body" -w "%{http_code}" \
  -H "Authorization: Bearer $JWT" \
  "$BASE_URL?verifier=$verifier&ric=$ric&leavedate=$leavedate")"

# 判定
if [[ "$http_code" == "200" || "$http_code" == "201" ]]; then
  echo "成功: HTTP $http_code"
  cat "$tmp_body"
else
  echo "失敗: HTTP $http_code" >&2
  cat "$tmp_body" >&2
  exit 1
fi
